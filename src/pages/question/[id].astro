---
import Layout from '../../components/Layout.astro';
import TopNav from '../../components/TopNav.astro';
import QuizCard from '../../components/QuizCard.jsx';
import LessonModal from '../../components/LessonModal.jsx';

// Get all question files at build time
const questionFiles = import.meta.glob('./../../questions/*.mdx', { eager: true });

// Generate paths for all questions
export async function getStaticPaths() {
  return Object.values(questionFiles).map(file => {
    const typedFile = file as { frontmatter: { id: string } };
    return {
      params: { id: typedFile.frontmatter.id },
      props: { file }
    };
  });
}

// Get the question data from the props
const { file } = Astro.props;
const typedFile = file as { 
  frontmatter: { id: string; question: string; answers: any[] }; 
  Content: any 
};
const { id, question, answers } = typedFile.frontmatter;
const Content = typedFile.Content;

// For TopNav, we need all questions
const allQuestions = Object.values(questionFiles).map(file => {
  const typedFile = file as { frontmatter: { id: string; question: string; answers: any[] }; Content: any };
  return { 
    id: typedFile.frontmatter.id, 
    question: typedFile.frontmatter.question, 
    answers: typedFile.frontmatter.answers 
  };
});
---

<Layout title={`Question ${id} - Amateur Radio Exam Prep`}>
  <TopNav questions={allQuestions} />

  <div class="max-w-4xl mx-auto px-4 py-8">
    <div class="mb-8">
      <h1 class="text-2xl font-bold text-gray-800 mb-4">Question {id}</h1>
      <div class="bg-white shadow-md rounded-lg p-6">
        <QuizCard 
          client:load
          id={id}
          question={question}
          answers={answers}
          onShowLesson={(questionId) => {
            // This function will be called from the React component
          }}
        />
      </div>
    </div>

    <div class="mt-8">
      <h2 class="text-xl font-bold text-gray-800 mb-4">Lesson</h2>
      <div class="bg-white shadow-md rounded-lg p-6 prose max-w-none">
        <Content />
      </div>
    </div>
  </div>

  <!-- LessonModal component will be client-side hydrated -->
  <LessonModal 
    client:only="react"
    isOpen={false}
    onClose={() => {}}
    content={null}
  />

  <!-- Hidden element to store lesson content for the current question -->
  <div id={`lesson-${id}`} class="hidden">
    <Content />
  </div>
</Layout>

<script>
  // Set up the interaction between QuizCard and LessonModal
  document.addEventListener('DOMContentLoaded', () => {
    // Listen for the custom event from the QuizCard component
    document.addEventListener('showLesson', (event) => {
      const detail = (event as CustomEvent<{ questionId: string }>).detail;
      const questionId = detail.questionId;

      // Find the lesson content for this question
      const lessonElement = document.getElementById(`lesson-${questionId}`);

      if (lessonElement) {
        // Clone the lesson content to avoid removing it from its original location
        const lessonContentClone = lessonElement.cloneNode(true) as HTMLElement;

        // Show the cloned content (it was hidden in the original)
        lessonContentClone.classList.remove('hidden');

        // Dispatch a custom event to open the React modal with the content
        document.dispatchEvent(new CustomEvent('react-open-lesson-modal', {
          detail: {
            content: lessonContentClone
          }
        }));
      } else {
        console.error(`Lesson content not found for question ${questionId}`);
      }
    });
  });
</script>