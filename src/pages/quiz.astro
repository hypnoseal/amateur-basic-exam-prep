---
// This page now uses client-side navigation to a random question
import Layout from '../components/Layout.astro';
import TopNav from '../components/TopNav.astro';
import { getAllQuestions } from '../utils/questions';

// For TopNav, we need all questions
const allQuestions = getAllQuestions();
---

<Layout title="Quiz - Amateur Radio Exam Prep">
  <TopNav questions={allQuestions} />

  <div class="flex justify-center items-center min-h-[50vh]">
    <div class="text-center p-8 max-w-md">
      <h1 class="text-2xl font-bold mb-4">Loading Quiz...</h1>
      <p class="text-gray-600 mb-4">Selecting a random question for you.</p>
      <div class="animate-spin rounded-full h-12 w-12 border-b-2 border-indigo-600 mx-auto"></div>
    </div>
  </div>
</Layout>

<script>
  // Function to fetch question IDs and navigate to a random question
  async function navigateToRandomQuestion() {
    try {
      // Try to get question IDs from localStorage first (if available and not expired)
      const cachedData = localStorage.getItem('questionIds');
      const cacheTimestamp = localStorage.getItem('questionIdsTimestamp');
      const cacheExpiration = 24 * 60 * 60 * 1000; // 24 hours in milliseconds

      let questionIds: string[] = [];

      // Check if we have valid cached data
      if (cachedData && cacheTimestamp && 
          (Date.now() - parseInt(cacheTimestamp)) < cacheExpiration) {
        questionIds = JSON.parse(cachedData);
        console.log('Using cached question IDs');
      } else {
        // Fetch the question IDs from the generated JSON file
        const response = await fetch('/data/question-ids.json');

        if (!response.ok) {
          throw new Error(`Failed to fetch question IDs: ${response.status}`);
        }

        questionIds = await response.json();

        // Cache the question IDs in localStorage
        localStorage.setItem('questionIds', JSON.stringify(questionIds));
        localStorage.setItem('questionIdsTimestamp', Date.now().toString());
        console.log('Fetched and cached question IDs');
      }

      if (questionIds.length === 0) {
        throw new Error('No question IDs found');
      }

      // Select a random question ID
      const randomIndex = Math.floor(Math.random() * questionIds.length);
      const selectedQuestionId = questionIds[randomIndex];

      // Navigate to the selected question
      window.location.href = `/quiz/${selectedQuestionId}`;
    } catch (error) {
      console.error('Error navigating to random question:', error);

      // Fallback: If we can't get the question IDs, redirect to the home page
      window.location.href = '/';

      // Show an error message
      alert('Sorry, we encountered an error loading the quiz. Please try again later.');
    }
  }

  // Navigate to a random question when the page loads
  document.addEventListener('DOMContentLoaded', navigateToRandomQuestion);
</script>
